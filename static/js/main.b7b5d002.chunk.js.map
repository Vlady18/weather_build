{"version":3,"sources":["Components/Layout/Layout.module.css","Components/Input/Input.module.css","Components/Loader/Loader.module.css","Components/modalWindow/modalWindow.module.css","Components/NewsItem/NewsItem.module.css","api/Api.js","redux/reducers/weatherReducer.js","Components/MenuToggle/MenuToggle.js","Components/Drawer/Drawer.js","Components/Layout/Layout.js","Components/Input/Input.js","Components/Loader/Loader.js","Components/Forecast/Forecast.js","Components/modalWindow/modalWindow.js","Components/Weather/Weather.js","redux/reducers/forecastReducer.js","Components/Weather/WeatherContainer.js","Components/NewsItem/NewsItem.js","Components/News/News.js","redux/reducers/newsReducer.js","Components/News/NewsContainer.js","App.js","serviceWorker.js","redux/reducers/rootReducer.js","index.js","Components/News/News.module.css","Components/Weather/Weather.module.css","Components/MenuToggle/MenuToggle.module.css","Components/Drawer/Drawer.module.css"],"names":["module","exports","Layout","Input_wrap","Loader","lds-ripple","modalWindow","button_more","instance","axios","create","baseURL","instanceNews","API","city","get","concat","country","currentPage","then","response","data","initialState","weather","isFetch","isError","weatherAC","type","isFetchingAC","fetch","weatherReducer","state","arguments","length","undefined","action","Object","objectSpread","MenuToggle","props","cls","classes","menuIs","push","open","react_default","a","createElement","className","join","aria-hidden","onClick","changeMenuIs","Drawer","renderLinks","links","map","link","index","key","react_router_dom","to","exact","_this","linkDrawerHandler","label","this","close","React","Component","setState","Components_MenuToggle_MenuToggle","Components_Drawer_Drawer","children","Input","inputType","htmlFor","Math","random","id","onChange","e","setCurrentInputCity","Forecast","setConfig","list","forecastInfo","dataArray","formatData","xAxis","gridLineWidth","title","text","alignTicks","categories","x","lineColor","lineWidth","gridLineColor","tickColor","tickWidth","chart","backgroundColor","inverted","yAxis","startOnTick","min","labels","enabled","tooltip","plotOptions","series","color","dataLabels","format","legend","y","ReactHighcharts_default","config","forecast","tempArray","temp","round","main","item","date","Date","dt","getMinutes","getHours","ModalWindow","closeModalHandler","Weather","currentInputCity","currentDate","setCity","setCityInfo","target","value","getForecast","setForecastInfo","imgSkyUrl","urlPart","readyForecast","console","log","mainWeather","offset","timezone","currentDateStr","getTime","toUTCString","replace","form","Components_Input_Input","result_weather","Components_Loader_Loader","name","curTemp","src","icon","alt","description","temp_min","temp_max","pressure","humidity","disabled","isReady","Components_Forecast_Forecast","forecastFetch","isFetchForecast","weatherForecastReadyAC","ready","weatherForecastFetchAC","forecastReducer","WeatherContainer","Components_Weather_Weather","connect","dispatch","status","cod","error","weatherForecastAC","ItemExampleItems","Container","Item","Group","Image","size","article","urlToImage","Content","Header","as","href","url","Meta","publishedAt","substring","substr","Description","Extra","author","News","countryChange","setNews","setNewCurrentPage","page","setCurrentPage","_this2","pageCount","ceil","newsTotalCount","pageSize","pages","i","Select","selected","newsCont","newsArticles","NewsItem","articleState","articleIsOpen","pagination","current","initialstate","articles","totalNewsCount","setNewsAC","news","setTotalNewsAC","total","changeFetchNews","bool","newsReducer","NewsContainer","Components_News_News","totalResults","setNewCurrentPageAC","App","Components_Layout_Layout","react_router","render","News_NewsContainer","path","Weather_WeatherContainer","Boolean","window","location","hostname","match","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.b7b5d002.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3bY2W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input_wrap\":\"Input_Input_wrap__1-603\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3dxHy\",\"lds-ripple\":\"Loader_lds-ripple__3Kylk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWindow\":\"modalWindow_modalWindow__AEF2f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_more\":\"NewsItem_button_more__2CxG-\"};","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.openweathermap.org/',\r\n})\r\nconst instanceNews = axios.create({\r\n    baseURL: 'https://newsapi.org/v2/top-headlines',\r\n})\r\nexport const API = {\r\n    getCurrentWeather(city){\r\n        return instance.get(`data/2.5/weather?q=${city}&APPID=7bb0d4450f7d6addbe608642a58bcf7a`)\r\n    },\r\n    getCurrentForecast(city){\r\n        return instance.get(`data/2.5/forecast?q=${city}&APPID=7bb0d4450f7d6addbe608642a58bcf7a&cnt=5`)\r\n    },\r\n    getNews(country, currentPage){\r\n        return instanceNews.get(`?pageSize=5&page=${currentPage}&country=${country}&apiKey=3344e994d3f34b4887aa777a5fde3aba`).then(response=> response.data)\r\n    },\r\n    changeCurrentPage(country, currentPage){\r\n        return instanceNews.get(`?pageSize=5&page=${currentPage}&country=${country}&apiKey=3344e994d3f34b4887aa777a5fde3aba`).then(response=> response.data)\r\n    }\r\n}\r\n\r\n","import {API} from \"../../api/Api\";\r\n\r\nconst WEATHER = 'WEATHER'\r\nconst TOGGLE_IS_FETCH = 'TOGGLE_IS_FETCH'\r\nconst WEATHER_ERROR = 'WEATHER_ERROR'\r\n\r\n\r\n\r\nconst initialState = {\r\n    weather: [],\r\n    city: '',\r\n    isFetch: false,\r\n    isError: false\r\n    // coord: null,\r\n    // weather: null,\r\n    // main: null,\r\n    // wind: null,\r\n    // clouds: null\r\n}\r\n\r\nconst weatherReducer = (state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case WEATHER:\r\n            return{\r\n                ...state,\r\n                weather: action.data,\r\n                // coord: action.data.coord,\r\n                // main: action.data.main,\r\n                // wind: action.data.wind,\r\n            }\r\n        case TOGGLE_IS_FETCH:\r\n            return{\r\n                ...state,\r\n                isFetch: action.fetch\r\n        }\r\n        case WEATHER_ERROR:\r\n            return{\r\n                ...state,\r\n                isError: true\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const weatherAC =(data) =>{\r\n    return{\r\n        type: WEATHER,\r\n        data\r\n    }\r\n}\r\n\r\nconst weatherErrorAC =() =>{\r\n    return{\r\n        type: WEATHER_ERROR,\r\n    }\r\n}\r\n\r\nconst isFetchingAC =(fetch) =>{\r\n    return{\r\n        type: TOGGLE_IS_FETCH,\r\n        fetch\r\n    }\r\n}\r\n\r\n\r\nexport const weatherThunkCreator = (city) => (dispatch)=>{\r\n    dispatch(isFetchingAC(true))\r\n    API.getCurrentWeather(city).then(data=>{\r\n        if(data.status === 200 && data.data.cod === 200){\r\n            dispatch(weatherAC(data.data))\r\n            dispatch(isFetchingAC(false))\r\n        }\r\n    },\r\n        (error) => { dispatch(weatherErrorAC(true))\r\n            dispatch(isFetchingAC(false))\r\n            dispatch(weatherAC([]))\r\n\r\n        }\r\n)\r\n}\r\n\r\nexport default weatherReducer","import React from 'react'\r\nimport classes from './MenuToggle.module.css'\r\nconst MenuToggle = (props) =>{\r\n    const cls = [\r\n        'fa',\r\n        classes.MenuToggle\r\n    ]\r\n    props.menuIs ? cls.push('fa-times', classes.open) : cls.push('fa-bars')\r\n    return(\r\n        <i className={cls.join(' ')} aria-hidden=\"true\" onClick={props.changeMenuIs}></i>\r\n    )\r\n}\r\nexport default MenuToggle","import React from 'react'\r\nimport classes from './Drawer.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass Drawer extends React.Component{\r\n\r\n    renderLinks=(links)=>{\r\n       return links.map((link, index)=>{\r\n            return(\r\n                <li key={index}>\r\n                    <NavLink to={link.to} exact={link.exact} onClick={this.props.linkDrawerHandler}>{link.label}</NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const cls = [classes.Drawer]\r\n        if (!this.props.menuIs) {\r\n            cls.push(classes.close)\r\n        }\r\n        const links = [\r\n            {label: 'Погода', to: '/weather', exact: true},\r\n            {label: 'Новости', to: '/news', exact: true}\r\n            ]\r\n        return(\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks(links)}\r\n                    </ul>\r\n                </nav>\r\n        )\r\n    }\r\n}\r\nexport default Drawer","import React from 'react'\r\nimport classes from './Layout.module.css'\r\nimport MenuToggle from \"../MenuToggle/MenuToggle\";\r\nimport Drawer from \"../Drawer/Drawer\";\r\n\r\nclass Layout extends React.Component{\r\n    state={\r\n        menuIs: false\r\n    }\r\n    linkDrawerHandler=()=>{\r\n        this.setState({\r\n            menuIs: false\r\n        })\r\n    }\r\n    changeMenuIs=()=>{\r\n        this.setState({\r\n            menuIs: !this.state.menuIs\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className={classes.Layout}>\r\n                <MenuToggle menuIs={this.state.menuIs} changeMenuIs={this.changeMenuIs}  />\r\n                <Drawer menuIs={this.state.menuIs} linkDrawerHandler={this.linkDrawerHandler}/>\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Layout","import React from 'react'\r\nimport classes from './Input.module.css'\r\nconst Input = (props)=>{\r\n    const inputType = props.type || 'text'\r\n    const htmlFor = `${inputType}-${(Math.random())}`\r\n    return(\r\n        <div className={classes.Input_wrap}>\r\n            <label htmlFor={htmlFor}>For example: Kyiv, London, Paris</label>\r\n            <input id={htmlFor} onChange={(e)=> props.setCurrentInputCity(e)} />\r\n        </div>\r\n    )\r\n}\r\nexport default Input","import React from 'react'\r\nimport classes from './Loader.module.css'\r\nconst Loader = ()=>{\r\n    return(\r\n        <div className={classes.Loader}>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport ReactHighcharts from 'react-highcharts'\r\n\r\nclass Forecast extends React.Component {\r\n    setConfig = () => {\r\n        const { list } = this.props.forecastInfo;\r\n        const dataArray = formatData(list);\r\n        return {\r\n            xAxis: {\r\n                gridLineWidth:1,\r\n                title: {\r\n                    text: null\r\n                },\r\n                alignTicks:false,\r\n                categories:dataArray.x,\r\n                lineColor: '#fff',\r\n                lineWidth: 1,\r\n                gridLineColor: '#fff',\r\n                tickColor:'#fff',\r\n                tickWidth: 1\r\n            },\r\n            chart: {\r\n                backgroundColor: 'transparent',\r\n                type: 'line',\r\n                inverted: false\r\n            },\r\n            yAxis: {\r\n                gridLineWidth:0,\r\n                startOnTick: true,\r\n                min: 0,\r\n                labels: {\r\n                    enabled: false\r\n                },\r\n                title: {\r\n                    text: 'Degree Kelvin'\r\n                }\r\n            },\r\n            title: {\r\n                text: 'Forecast'\r\n            },\r\n            tooltip: {\r\n                enabled: false\r\n            },\r\n            plotOptions: {\r\n                series: {\r\n                    color: '#fff',\r\n                    dataLabels: {\r\n                        format: '{y} K',\r\n                        enabled: true\r\n                    }\r\n                }\r\n            },\r\n            legend: {\r\n                enabled: false\r\n            },\r\n            series: [ {\r\n                data:dataArray.y\r\n            } ]\r\n        };\r\n    }\r\n    render(){\r\n        return(\r\n            <ReactHighcharts config = {this.setConfig()} />\r\n        )\r\n    }\r\n}\r\nconst formatData = (forecast) => {\r\n    const tempArray = forecast.map(temp => (\r\n        Math.round(temp.main.temp)\r\n    ));\r\n\r\n    const dateArray = forecast.map(item => {\r\n        const date = new Date(item.dt * 1000);\r\n        const min = `0${date.getMinutes()}`;\r\n\r\n        return `${date.getHours()}:${min}`;\r\n    });\r\n\r\n    return {\r\n        x:dateArray,\r\n        y:tempArray\r\n    };\r\n};\r\nexport default Forecast","import React from 'react'\r\nimport classes from './modalWindow.module.css'\r\n\r\nconst ModalWindow = (props)=>{\r\n    return(\r\n        <div className={classes.modalWindow}>\r\n            <i className=\"fa fa-times\" aria-hidden=\"true\" onClick={props.closeModalHandler}></i>\r\n            {\r\n                props.children\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalWindow","import React from 'react'\r\nimport classes from './Weather.module.css'\r\nimport Input from \"../Input/Input\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport Forecast from \"../Forecast/Forecast\";\r\nimport ModalWindow from \"../modalWindow/modalWindow\";\r\nclass Weather extends React.Component{\r\n    // componentWillUnmount(){\r\n    // }\r\n    state={\r\n        currentInputCity: '',\r\n        currentDate: null\r\n    }\r\n    setCity=() =>{\r\n        this.props.setCityInfo(this.state.currentInputCity)\r\n    }\r\n    setCurrentInputCity=(e) =>{\r\n        this.setState({\r\n            currentInputCity: e.target.value\r\n        })\r\n    }\r\n    getForecast=()=>{\r\n        this.props.setForecastInfo(this.state.currentInputCity)\r\n    }\r\n    imgSkyUrl = (urlPart)=>{\r\n        return `http://openweathermap.org/img/wn/${urlPart}@2x.png`\r\n    }\r\n    closeModalHandler = ()=>{\r\n        this.props.readyForecast(false)\r\n\r\n    }\r\n    render() {\r\n        console.log(this.props)\r\n        const mainWeather = this.props.weather\r\n        let offset = this.props.weather.timezone / 3600\r\n        let currentDateStr = new Date( new Date().getTime() + offset * 3600 * 1000).toUTCString().replace( / GMT$/, \"\" )\r\n        return(\r\n            <section className={classes.Weather}>\r\n                <h1>Check weather in your city!</h1>\r\n                <div className={classes.form}>\r\n                    <Input\r\n                        setCurrentInputCity={this.setCurrentInputCity}\r\n                    />\r\n                    <i onClick={this.setCity} className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className={classes.result_weather}>\r\n                    {this.props.isFetch\r\n                        ?\r\n                        <Loader />\r\n                        :\r\n                        this.props.weather.length !== 0\r\n                            ?\r\n                            <ul>\r\n                                <li>{mainWeather.name}</li>\r\n                                <li>{currentDateStr}</li>\r\n                                <li className={classes.curTemp}>{Math.round(mainWeather.main.temp - 273)} &#8451; </li>\r\n                                <li><span><img src={`${this.imgSkyUrl(mainWeather.weather[0].icon)}`} alt=\"\"/>{mainWeather.weather[0].description}</span></li>\r\n                                <li>{Math.round(mainWeather.main.temp_min - 273)} &#8451; / {Math.round(mainWeather.main.temp_max - 273)} &#8451;</li>\r\n                                <li><b>Pressure: </b> {mainWeather.main.pressure}</li>\r\n                                <li><b>Humidity: </b>  {mainWeather.main.humidity}%</li>\r\n                                <button disabled={this.state.currentInputCity ? false : 'disabled'} onClick={this.getForecast}>Get Forecast!</button>\r\n                            </ul>\r\n\r\n                            :\r\n                            this.props.isError\r\n                                ?\r\n                                <b>Error...Enter the correct data in the field.</b>\r\n                                : null\r\n                    }\r\n\r\n                    {this.props.forecastInfo && this.props.isReady\r\n                        ?\r\n                            <ModalWindow closeModalHandler={this.closeModalHandler}>\r\n                                <Forecast {...this.props}/>\r\n                            </ModalWindow>\r\n                        :\r\n                        this.props.forecastFetch\r\n                        ?\r\n                            <Loader />\r\n                            : null\r\n                    }\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Weather","import {API} from '../../api/Api'\r\n\r\nconst WEATHER_FORECAST = 'WEATHER_FORECAST'\r\nconst WEATHER_FORECAST_READY = 'WEATHER_FORECAST_READY'\r\nconst WEATHER_FORECAST_FETCH = 'WEATHER_FORECAST_FETCH'\r\n\r\n\r\nconst initialState = {\r\n    forecast: [],\r\n    isReady: false,\r\n    isFetchForecast: false\r\n}\r\n\r\nconst forecastReducer = (state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case WEATHER_FORECAST:\r\n            return{\r\n                ...state,\r\n                forecast: action.data,\r\n            }\r\n        case WEATHER_FORECAST_READY:\r\n            return{\r\n                ...state,\r\n                isReady: action.ready,\r\n            }\r\n        case WEATHER_FORECAST_FETCH:\r\n            return{\r\n                ...state,\r\n                isFetchForecast: action.fetch,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nconst weatherForecastAC =(data) =>{\r\n    return{\r\n        type: WEATHER_FORECAST,\r\n        data\r\n    }\r\n}\r\nexport const weatherForecastReadyAC =(ready) =>{\r\n    return{\r\n        type: WEATHER_FORECAST_READY,\r\n        ready\r\n    }\r\n}\r\nexport const weatherForecastFetchAC =(fetch) =>{\r\n    return{\r\n        type: WEATHER_FORECAST_FETCH,\r\n        fetch\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const weatherForecasThunkCreator = (city)=>(dispatch)=>{\r\n    dispatch(weatherForecastFetchAC(true))\r\n    // debugger\r\n    API.getCurrentForecast(city).then((data) =>{\r\n        dispatch(weatherForecastAC(data.data))\r\n        dispatch(weatherForecastFetchAC(false))\r\n        dispatch(weatherForecastReadyAC(true))\r\n    })\r\n}\r\nexport default forecastReducer","import React from 'react'\r\nimport Weather from \"./Weather\";\r\nimport {connect} from \"react-redux\";\r\nimport {weatherAC, weatherThunkCreator} from \"../../redux/reducers/weatherReducer\";\r\nimport {weatherForecasThunkCreator, weatherForecastReadyAC} from \"../../redux/reducers/forecastReducer\";\r\n\r\nclass WeatherContainer extends React.Component{\r\n    render(){\r\n        return(\r\n            <Weather {...this.props} />\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        city: state.weather.city,\r\n        weather: state.weather.weather,\r\n        isFetch: state.weather.isFetch,\r\n        isError: state.weather.isError,\r\n        isReady: state.forecast.isReady,\r\n        forecastInfo: state.forecast.forecast,\r\n        forecastFetch: state.forecast.isFetchForecast\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCityInfo: weatherThunkCreator,\r\n    setForecastInfo: weatherForecasThunkCreator,\r\n    readyForecast: weatherForecastReadyAC,\r\n    weatherAC: weatherAC\r\n\r\n})(WeatherContainer)","import React from 'react'\r\nimport { Image, Item, Container, Button } from 'semantic-ui-react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from './NewsItem.module.css'\r\nconst imageNews = 'https://image.flaticon.com/icons/png/512/21/21601.png'\r\n\r\nconst ItemExampleItems = (props) => {\r\n    // let openArticleHandler = () =>{\r\n    //     props.articleIsOpen(true)\r\n    // }\r\n    return (\r\n        <Container>\r\n            <Item.Group>\r\n                <Item>\r\n                    <Item.Image size='tiny' src={props.article.urlToImage || imageNews } />\r\n\r\n                    <Item.Content>\r\n                            <Item.Header as='a' href={props.article.url} target=\"_blank\">{props.article.title}</Item.Header>\r\n                        <Item.Meta>{props.article.publishedAt.substring(0,10) + ' / ' + props.article.publishedAt.substr(11, 8)}</Item.Meta>\r\n                        <Item.Description>\r\n                            {props.article.description}\r\n                        </Item.Description>\r\n                        <Item.Extra>{props.article.author}</Item.Extra>\r\n                        {/*<div className={classes.button_more}>*/}\r\n                        {/*    <button className=\"ui primary button\" onClick={openArticleHandler}>Primary</button>*/}\r\n                        {/*</div>*/}\r\n                    </Item.Content>\r\n                </Item>\r\n            </Item.Group>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default ItemExampleItems","import React from 'react'\r\nimport {API} from \"../../api/Api\";\r\nimport classes from './News.module.css'\r\nimport ItemExampleItems from \"../NewsItem/NewsItem\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\n\r\nclass News extends React.Component{\r\n    // componentWillUnmount(){\r\n    //     this.props.setNews(null, null)\r\n\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.props.setNews()\r\n    // }\r\n    countryChange =(e) =>{\r\n        this.props.setNews(e.target.value, this.props.currentPage)\r\n    }\r\n    setNewCurrentPage = (page) =>{\r\n        this.props.setCurrentPage(this.props.country, page)\r\n    }\r\n    render(){\r\n        let pageCount = Math.ceil(this.props.newsTotalCount / this.props.pageSize)\r\n        let pages = []\r\n        for(var i = 1; i <= pageCount; i++){\r\n            pages.push(i)\r\n        }\r\n        return(\r\n            <div className={classes.News}>\r\n                <select className={classes.Select} name=\"countryNews\" id=\"\" onChange={this.countryChange}>\r\n                    <option value=\"\" disabled selected>Select country</option>\r\n                    <option value=\"ru\">Russia</option>\r\n                    <option value=\"us\">United State</option>\r\n                    <option value=\"fr\">France</option>\r\n                </select>\r\n                <ul className={classes.newsCont}>\r\n                    {\r\n                        this.props.isFetch\r\n                        ?\r\n                        <Loader />\r\n                        :\r\n                        this.props.newsArticles.map(article => {\r\n                            return (\r\n                                <li>\r\n                                    <ItemExampleItems\r\n                                        articleState={this.props.articleState}\r\n                                        articleIsOpen={this.props.articleIsOpen}\r\n                                        article={article}\r\n                                    />\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div className={classes.pagination}>\r\n                    <ul>\r\n                        {\r\n                            this.props.isFetch\r\n                                ?\r\n                                null\r\n                                :\r\n                            pages.map(page=>{\r\n                                return(\r\n                                    <li onClick={() => this.setNewCurrentPage(page)} className={this.props.currentPage === page ? classes.current : null}>{page}</li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n        </div>\r\n    )\r\n    }\r\n}\r\nexport default News","import {API} from \"../../api/Api\";\r\n\r\nconst SET_NEWS = 'SET_NEWS'\r\nconst SET_TOTAL_NEWS = 'SET_TOTAL_NEWS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst CHANGE_ARTICLE_OPEN = 'CHANGE_ARTICLE_OPEN'\r\nconst IS_FETCH_NEWS = 'IS_FETCH_NEWS'\r\n\r\nconst initialstate = {\r\n    articles: [],\r\n    pageSize: 5,\r\n    totalNewsCount: null,\r\n    currentPage: 1,\r\n    country: null,\r\n    articleIsOpen: false,\r\n    isFetch: false\r\n}\r\n\r\nconst newsReducer = (state=initialstate, action) => {\r\n    switch (action.type) {\r\n        case SET_NEWS:\r\n            return {\r\n                ...state,\r\n                articles: action.news,\r\n                country: action.country,\r\n                currentPage: 1\r\n            }\r\n        case SET_TOTAL_NEWS:\r\n            return {\r\n                ...state,\r\n                totalNewsCount: action.total\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n            case CHANGE_ARTICLE_OPEN:\r\n            return {\r\n                ...state,\r\n                articleIsOpen: action.bool\r\n            }\r\n            case IS_FETCH_NEWS:\r\n            return {\r\n                ...state,\r\n                isFetch: action.bool\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst setNewsAC = (news, country) =>{\r\n    return{\r\n        type: SET_NEWS,\r\n        news,\r\n        country\r\n    }\r\n}\r\nconst setTotalNewsAC = (total) =>{\r\n    return{\r\n        type: SET_TOTAL_NEWS,\r\n        total\r\n    }\r\n}\r\n\r\nconst setNewCurrentPageAC = (page) =>{\r\n    return{\r\n        type: SET_CURRENT_PAGE,\r\n        page\r\n    }\r\n}\r\nexport const changeArticleIsAC = (bool) =>{\r\n    return{\r\n        type: CHANGE_ARTICLE_OPEN,\r\n        bool\r\n    }\r\n}\r\n\r\nexport const changeFetchNews = (bool) =>{\r\n    return{\r\n        type: IS_FETCH_NEWS,\r\n        bool\r\n    }\r\n}\r\n\r\nexport const newsCurrentPageThunkCreator = (country, page) =>(dispatch)=>{\r\n    API.changeCurrentPage(country, page).then(response=> {\r\n            dispatch(setTotalNewsAC(response.totalResults))\r\n            dispatch(setNewsAC(response.articles, country))\r\n            dispatch(setNewCurrentPageAC(page))\r\n        }\r\n    )\r\n}\r\n\r\nexport const newsThunkCreator = (country, page) =>(dispatch)=>{\r\n    dispatch(changeFetchNews(true))\r\n    API.getNews(country, page).then(response=> {\r\n            dispatch(setTotalNewsAC(response.totalResults))\r\n            dispatch(changeFetchNews(false))\r\n            dispatch(setNewsAC(response.articles, country))\r\n    }\r\n    )\r\n}\r\n\r\nexport default newsReducer\r\n\r\n\r\n","import React from 'react'\r\nimport News from \"./News\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changeArticleIsAC,\r\n    newsCurrentPageThunkCreator,\r\n    newsThunkCreator,\r\n    setNewCurrentPageAC\r\n} from \"../../redux/reducers/newsReducer\";\r\n\r\nclass NewsContainer extends React.Component{\r\n    render(){\r\n        return <News {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        newsArticles: state.news.articles,\r\n        newsTotalCount: state.news.totalNewsCount,\r\n        currentPage: state.news.currentPage,\r\n        pageSize: state.news.pageSize,\r\n        country: state.news.country,\r\n        articleState: state.news.articleIsOpen,\r\n        isFetch: state.news.isFetch,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    setNews: newsThunkCreator,\r\n    setCurrentPage: newsCurrentPageThunkCreator,\r\n    articleIsOpen: changeArticleIsAC\r\n})(NewsContainer)\r\n","import React from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport {weatherThunkCreator} from \"./redux/reducers/weatherReducer\";\nimport Layout from \"./Components/Layout/Layout\";\nimport {Route, Switch} from \"react-router-dom\";\nimport WeatherContainer from \"./Components/Weather/WeatherContainer\";\nimport News from \"./Components/News/News\";\nimport NewsContainer from \"./Components/News/NewsContainer\";\n\nclass App extends React.Component{\n\n  render(){\n  return (\n    <Layout>\n      <Switch>\n\n        <Route exact render={() => (<NewsContainer />)}  path={'/news/:userId?'}/>\n          <Route exact render={() => (<WeatherContainer />)}/>\n\n          {/*<Route exact render={() => (<WeatherContainer />)}/>*/}\n        {/*<Route render={()=>(<h1>Not found</h1>)}/>*/}\n      </Switch>\n    </Layout>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from \"redux\";\r\nimport weatherReducer from \"./weatherReducer\";\r\nimport forecastReducer from \"./forecastReducer\";\r\nimport newsReducer from \"./newsReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    weather: weatherReducer,\r\n    news: newsReducer,\r\n    forecast: forecastReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {applyMiddleware, createStore} from 'redux'\nimport {rootReducer} from \"./redux/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\nwindow.store = store\nconst app =\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"News\":\"News_News__2YJP4\",\"newsCont\":\"News_newsCont__3gLSH\",\"Select\":\"News_Select__14CEu\",\"pagination\":\"News_pagination__3WD9a\",\"current\":\"News_current__364Os\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Weather\":\"Weather_Weather__I-7xc\",\"form\":\"Weather_form__1TP6y\",\"result_weather\":\"Weather_result_weather__S4RpR\",\"curTemp\":\"Weather_curTemp__6klA7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__27gs2\",\"open\":\"MenuToggle_open__39e35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3dztO\",\"close\":\"Drawer_close__18af3\"};"],"sourceRoot":""}